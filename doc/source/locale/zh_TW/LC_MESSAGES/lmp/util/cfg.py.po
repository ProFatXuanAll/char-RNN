# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, ProFatXuanAll
# This file is distributed under the same license as the Language Model
# Playground package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Language Model Playground 1.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-13 16:38+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/lmp/util/cfg.py.rst:2
msgid ":py:mod:`lmp.util.cfg`"
msgstr ""

#: lmp.util.cfg:1 of
msgid "Save training configuration and load pre-trained configuration."
msgstr ""

#: lmp.util.cfg.load:1 of
msgid "Load pre-trained configuration from JSON file."
msgstr ""

#: lmp.util.cfg.load:3 of
msgid ""
"Load pre-trained configuration from path ``exp/exp_name/cfg.json``. "
"Experiments must been performed before using this function. Wrap "
"configuration in :py:class:`argparse.Namespace` for convenience."
msgstr ""

#: lmp.util.cfg.load lmp.util.cfg.save of
msgid "Parameters"
msgstr ""

#: lmp.util.cfg.load:7 of
msgid "Pre-trained experiment name."
msgstr ""

#: lmp.util.cfg.load of
msgid "Returns"
msgstr ""

#: lmp.util.cfg.load:10 of
msgid "Pre-trained experiment configuration."
msgstr ""

#: lmp.util.cfg.load of
msgid "Return type"
msgstr ""

#: lmp.util.cfg.load lmp.util.cfg.save of
msgid "Raises"
msgstr ""

#: lmp.util.cfg.load:13 lmp.util.cfg.save:13 of
msgid "If experiment path ``exp/exp_name/cfg.json`` exists and is a directory."
msgstr ""

#: lmp.util.cfg.load:14 of
msgid "If experiment path ``exp/exp_name/cfg.json`` does not exist."
msgstr ""

#: lmp.util.cfg.load:16 of
msgid ":obj:`lmp.util.cfg.save`"
msgstr ""

#: lmp.util.cfg.load:19 lmp.util.cfg.save:18 of
msgid "Examples"
msgstr ""

#: lmp.util.cfg.save:1 of
msgid "Save training configuration in JSON format."
msgstr ""

#: lmp.util.cfg.save:3 of
msgid ""
"Save training configuration in to path ``exp/exp_name/cfg.json``. All CLI"
" arguments will be saved. If experiment path ``exp/exp_name/cfg.json`` "
"does not exists, then create path recursively."
msgstr ""

#: lmp.util.cfg.save:8 of
msgid "CLI arguments which will be saved as training configuration."
msgstr ""

#: lmp.util.cfg.save:10 of
msgid "Current training experiment name."
msgstr ""

#: lmp.util.cfg.save:15 of
msgid ":obj:`lmp.util.cfg.load`"
msgstr ""

